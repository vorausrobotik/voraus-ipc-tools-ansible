[tox]
envlist =
    lint
isolated_build = True

[testenv]
# Passes host environment variables to the tox environment.
passenv =
    CODEMETER_HOST
    SOURCE_DATE_EPOCH
# Define additional environment variables for all test environments.
setenv = []

[testenv:lint]
description = Run static checkers.
basepython = py311
setenv =
    {[testenv]setenv}
    DOCSDIR = {toxinidir}/docs
    CI=true
allowlist_externals =
    npx
extras = lint
depends =
    build
commands =
    # Install ansible collection
    ansible-galaxy collection install -f voraus/ipc_tools
    # Install roles from requirements.yml
    ansible-galaxy role install -r requirements.yml
    # Ansible lint
    ansible-lint
    # Prettier
    npx --yes prettier --check .
    # Check import ordering
    isort . --check
    # Check formatting
    black . --check
    # Check type hinting
    mypy .
    # Lint source code
    ruff check .
    pylint . {posargs}
    # Check .rst files
    doc8 {env:DOCSDIR}


[testenv:py311-test]
description = Run doc tests and unit tests.
extras = test
setenv =
    PY_IGNORE_IMPORTMISMATCH=1
allowlist_externals =
    molecule
commands =
    molecule test --all

[testenv:docs]
description = Test and build the docs.
setenv =
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/docs/build
extras = doc
commands =
    # Remove build directory
    python -c 'import shutil; shutil.rmtree("{env:BUILDDIR}", ignore_errors=True);'
    # Create dummy files to prevent warnings
    python -c 'import pathlib; pathlib.Path("{env:DOCSDIR}").joinpath("license_compliance.rst").write_text("");'
    # Run doctests (only from .rst files in docs folder, doctests in .py files are covered by pytest)
    sphinx-build -b doctest -W -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/doctest" {posargs}
    # Dump OSS license information into the docs directory
    python {env:DOCSDIR}/_scripts/generate_license_information.py
    # Build the docs
    sphinx-build -b html -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/html" {posargs}


[testenv:build]
description = Build the package.
extras = build
allowlist_externals =
    make
commands =
    make
